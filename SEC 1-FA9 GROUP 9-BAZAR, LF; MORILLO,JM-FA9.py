{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5e77012b-2bb7-4b7b-bedf-fa4951d04214",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "data = pd.read_csv('Political Interest.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "06387954-31ef-4380-ab64-07083325782a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>education_level</th>\n",
       "      <th>political_interest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>41.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>41.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>44.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>44.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>46.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>43.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>38.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>63.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>64.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>61.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>64.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>69.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>69.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>66.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>62.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>63.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>60.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>34.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>58.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>63.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>66.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>65.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>61.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>55.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>51.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    gender  education_level  political_interest\n",
       "0        1                1                38.0\n",
       "1        1                1                39.0\n",
       "2        1                1                35.0\n",
       "3        1                1                38.0\n",
       "4        1                1                41.0\n",
       "5        1                1                40.0\n",
       "6        1                1                36.0\n",
       "7        1                1                37.0\n",
       "8        1                1                33.0\n",
       "9        1                2                41.5\n",
       "10       1                2                41.5\n",
       "11       1                2                44.5\n",
       "12       1                2                44.5\n",
       "13       1                2                44.0\n",
       "14       1                2                46.5\n",
       "15       1                2                42.0\n",
       "16       1                2                43.5\n",
       "17       1                2                38.5\n",
       "18       1                3                63.0\n",
       "19       1                3                64.0\n",
       "20       1                3                61.0\n",
       "21       1                3                64.0\n",
       "22       1                3                69.0\n",
       "23       1                3                69.0\n",
       "24       1                3                66.0\n",
       "25       1                3                62.0\n",
       "26       1                3                63.0\n",
       "27       1                3                60.0\n",
       "28       2                1                40.0\n",
       "29       2                1                41.0\n",
       "30       2                1                36.0\n",
       "31       2                1                39.0\n",
       "32       2                1                44.0\n",
       "33       2                1                44.0\n",
       "34       2                1                42.0\n",
       "35       2                1                38.0\n",
       "36       2                1                38.0\n",
       "37       2                1                34.0\n",
       "38       2                2                45.0\n",
       "39       2                2                46.0\n",
       "40       2                2                41.0\n",
       "41       2                2                44.0\n",
       "42       2                2                49.0\n",
       "43       2                2                49.0\n",
       "44       2                2                47.0\n",
       "45       2                2                43.0\n",
       "46       2                2                43.0\n",
       "47       2                2                39.0\n",
       "48       2                3                57.0\n",
       "49       2                3                58.0\n",
       "50       2                3                63.0\n",
       "51       2                3                66.0\n",
       "52       2                3                65.0\n",
       "53       2                3                61.0\n",
       "54       2                3                59.0\n",
       "55       2                3                55.0\n",
       "56       2                3                45.0\n",
       "57       2                3                51.0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c169c0f-ec40-42dd-a7a5-86feee5d639f",
   "metadata": {},
   "source": [
    "&emsp; Given the **null hypothesis ($H_0$):** There is no significant interaction effect on political interest between gender and education level.\n",
    "\n",
    "&emsp; We are interested in examining the interaction between gender and education level to see if they jointly affect political interest. In this scenario, the most appropriate statistical test would be a **two-way Analysis of Variance (ANOVA)**. \n",
    "\n",
    "&emsp; Two-way ANOVA allows us to test the interaction effect between two independent categorical variables (gender and education level) on a continuous dependent variable (political interest)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87faa930-4980-4862-8e0d-c2583e3e62a1",
   "metadata": {},
   "source": [
    "But note that, in order to run a two-way ANOVA, there are **six (6) assumptions** that need to be considered first. These assumptions are:\n",
    ">1. There is **one (1) dependent variable** that is measured at the continuous level (i.e., the interval or ratio level).\n",
    "2. There are **two (2) independent variables** where each independent variable consists of two or more categorical, independent groups. \n",
    "3. There should have **independence of observations,** which means that there is no relationship between the observations in each group of the independent variable or between the groups themselves.\n",
    "4. There should be **no significant outliers** in any cell of the design.\n",
    "5. The distribution of the dependent variable should be approximately **normally distributed** in every cell of the design.\n",
    "6. The **variance** of the dependent variable should be **equal** in every cell of the design."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b4e854a-7edb-41a2-a776-86f30c2a0a53",
   "metadata": {},
   "source": [
    "<h4>Testing of Assumptions</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0046f21d-950a-4cec-9462-96ac0b2a166d",
   "metadata": {},
   "source": [
    "<h4>Assumption 1:</h4> \n",
    "\n",
    "&emsp;The dependent variable, **interest in politics**, is measured at the continuous level.\n",
    "\n",
    ">**Remark:** This assumption is met since the participant's interest in politics is measured on a continuous scale, as the participants rated their interest on a scale, from 0 to 100, which is a continuous data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54a33538-7773-416c-a964-258b4924deda",
   "metadata": {},
   "source": [
    "<h4>Assumption 2:</h4>\n",
    "\n",
    "&emsp;The two independent variables, **gender and educational level**, each consists of two or more categorical, independent groups.    \n",
    "\n",
    ">**Remark:** In this case, the assumption is met since the independent variable gender has two (2) categorical independent group (Male/Female) and the independent variable, education level, has three (3), which consists of School, College & University. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83e4d861-93c5-41b4-9478-7035fabca845",
   "metadata": {},
   "source": [
    "<h4>Assumption 3:</h4> \n",
    "\n",
    "&emsp;The independence of observation is observed.  \n",
    "\n",
    ">**Remark:** The assumption of independence of observations is met because participants were randomly sampled, ensuring that each person's response was collected separately and without any influence from others. Since there is no dependencies between responses, as each participant's rating reflects their individual perspective on politics, this assumption is met."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62264a3a-bb68-41c8-8426-c7d15856e085",
   "metadata": {},
   "source": [
    "<h4>Assumption 4:</h4> \n",
    "\n",
    "&emsp; There should be no significant outliers.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d6d70ace-a39e-4b21-80d8-387f6ca875b7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "color = {1: 'lightblue', 2: 'lightpink'}\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.boxplot(data=data, x='education_level', y='political_interest', hue='gender', palette=color)\n",
    "plt.title(\"Boxplot of Political Interest by Education and Gender\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "142320d4-8fb2-4a87-b548-500a95e8a327",
   "metadata": {},
   "source": [
    "> **Remark:** As you can see in the boxplot, there are no hollowed circles outside of the box, hence, there are no significant outliers and therefore,  the assumption is met. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "639bf3ac-9cfe-4e42-842c-41474413a595",
   "metadata": {},
   "source": [
    "<h4>Assumption 5:</h4> \n",
    "\n",
    "&emsp; The dependent variable, interest in politics, is approximately normally distributed for each combination of the groups of gender and educational level, as assessed by Shapiro-Wilk test of normality, (p > 0.05).  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "53688548-466b-422b-813e-83b8a35368f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shapiro-Wilk test for normality (Gender: 1, Education: 1): p-value = 0.9708\n",
      "Shapiro-Wilk test for normality (Gender: 1, Education: 2): p-value = 0.7611\n",
      "Shapiro-Wilk test for normality (Gender: 1, Education: 3): p-value = 0.3197\n",
      "Shapiro-Wilk test for normality (Gender: 2, Education: 1): p-value = 0.8189\n",
      "Shapiro-Wilk test for normality (Gender: 2, Education: 2): p-value = 0.8189\n",
      "Shapiro-Wilk test for normality (Gender: 2, Education: 3): p-value = 0.6684\n"
     ]
    }
   ],
   "source": [
    "import scipy.stats as stats\n",
    "\n",
    "for (gender, edu), group in data.groupby(['gender', 'education_level']):\n",
    "    stat, p_value = stats.shapiro(group['political_interest'])\n",
    "    print(f\"Shapiro-Wilk test for normality (Gender: {gender}, Education: {edu}): p-value = {p_value:.4f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fb85c5d-31e7-45e6-8bc0-6667d45d28dc",
   "metadata": {},
   "source": [
    "> **Remark:** The results of the Shapiro-Wilk test for normality indicate that for all combinations of gender and education level, the p-values are greater than the significance level of 0.05, which suggests that the data in each group follows a normal distribution. Hence, the assumption is met."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f4714b5-e227-442b-bcee-7e0f26166595",
   "metadata": {},
   "source": [
    "<h4>Assumption 6:</h4> \n",
    "\n",
    "&emsp; The variances for each combination of the groups of gender and educational level are equal, as assessed by Levene’s test of equality of variances, p = 0.068.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "394334f3-26c9-4f90-937c-7b003004170b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Levene's test for equality of variances: p-value = 0.068\n"
     ]
    }
   ],
   "source": [
    "levene_stat, levene_p = stats.levene(\n",
    "    *[group['political_interest'].values for name, group in data.groupby(['gender', 'education_level'])]\n",
    ")\n",
    "print(f\"Levene's test for equality of variances: p-value = {levene_p:.3f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50d49740-032a-40b3-b286-39ef772cb71c",
   "metadata": {},
   "source": [
    ">**Remark:** Since the result of the Levene's Test for equal variances are greater than 0.05, then the assumption of equal variance is met."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2175abab-92ff-4aaa-97ac-479ad2501866",
   "metadata": {},
   "source": [
    "Since all of these six (6) assumptions have been met, we will then proceed to the two-way ANOVA test."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb9bc28f-d2be-4897-a81f-ef5c236a3901",
   "metadata": {},
   "source": [
    "<h4> Two-way ANOVA Test </h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "381d131e-af6e-4ea3-8bd0-65ba87d8bab7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sum_sq</th>\n",
       "      <th>df</th>\n",
       "      <th>F</th>\n",
       "      <th>PR(&gt;F)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>C(gender)</th>\n",
       "      <td>10.704737</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.744533</td>\n",
       "      <td>3.921748e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C(education_level)</th>\n",
       "      <td>5409.958966</td>\n",
       "      <td>2.0</td>\n",
       "      <td>188.136131</td>\n",
       "      <td>1.553704e-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C(gender):C(education_level)</th>\n",
       "      <td>210.337661</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.314679</td>\n",
       "      <td>1.587744e-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Residual</th>\n",
       "      <td>747.644444</td>\n",
       "      <td>52.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   sum_sq    df           F        PR(>F)\n",
       "C(gender)                       10.704737   1.0    0.744533  3.921748e-01\n",
       "C(education_level)            5409.958966   2.0  188.136131  1.553704e-24\n",
       "C(gender):C(education_level)   210.337661   2.0    7.314679  1.587744e-03\n",
       "Residual                       747.644444  52.0         NaN           NaN"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from statsmodels.formula.api import ols\n",
    "\n",
    "model = ols('political_interest ~ C(gender) * C(education_level)', data=data).fit()\n",
    "anova = sm.stats.anova_lm(model, typ=2)\n",
    "anova"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1659c54f-6121-4a4b-9d58-70f083eb9bf8",
   "metadata": {},
   "source": [
    "> **Remarks:** The interaction between gender and education level (C(gender):C(education_level)) has an F-value of 7.31 with a p-value of **0.00159**. Since the p-value is less than 0.05, **the interaction is statistically significant**.      \n",
    "&emsp; The main effect of gender is not statistically significant **(p = 0.392)**, meaning that gender alone does not appear to have a direct influence on political interest. And although the main effect of education level is significant **(p < 0.001)**, it is to be interpreted with the understanding that this effect can be modified by gender. Therefore, the main effects of each independent variable should not be reported.      \n",
    "&emsp; Since there is a significant interaction, it’s more useful to interpret the effect of education level within the context of gender by **simple main effects analysis.**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fc6b471-2501-4868-921b-97be22630bf9",
   "metadata": {},
   "source": [
    "<h4>Simple Main Effects Analysis</h4>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80eeda36-f0cc-461d-bed7-9683dc7a145a",
   "metadata": {},
   "source": [
    "**Gender - Simple Main Effect**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "1be20ba7-3f31-4e36-a5a6-422ec234c62a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Effect of Gender within Education Level 1\n",
      "               sum_sq    df         F    PR(>F)\n",
      "C(gender)   22.009357   1.0  2.551858  0.128585\n",
      "Residual   146.622222  17.0       NaN       NaN\n",
      "\n",
      "Effect of Gender within Education Level 2\n",
      "               sum_sq    df         F    PR(>F)\n",
      "C(gender)   12.983041   1.0  1.575137  0.226442\n",
      "Residual   140.122222  17.0       NaN       NaN\n",
      "\n",
      "Effect of Gender within Education Level 3\n",
      "           sum_sq    df         F    PR(>F)\n",
      "C(gender)  186.05   1.0  7.266001  0.014791\n",
      "Residual   460.90  18.0       NaN       NaN\n"
     ]
    }
   ],
   "source": [
    "for edu_level in data['education_level'].unique():\n",
    "    sub_data = data[data['education_level'] == edu_level]\n",
    "    model = ols('political_interest ~ C(gender)', data=sub_data).fit()\n",
    "    anova_table = sm.stats.anova_lm(model, typ=2)\n",
    "    print(f\"\\nEffect of Gender within Education Level {edu_level}\")\n",
    "    print(anova_table)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "558c7035-ae9a-45c5-a61d-3b6fe11b007b",
   "metadata": {},
   "source": [
    "> **Remarks:**  A simple main effects analysis was conducted to examine the effect of gender at different levels of education. **At the university level, there was a statistically significant effect of gender.**  \n",
    "&emsp; In **Education Levels 1 and 2 (School & College)**, gender does not significantly affect interest in politics, with a p-value greater than the significance level of 0.05 (0.129 & 0.226 respectively).       \n",
    "&emsp; In **Education Level 3 (University)**, gender does have a significant effect, with a p-value of 0.015, indicating that the level of interest in politics may differ between males and females in university-level education."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa171765-7751-4b4d-bb50-01419440ae4c",
   "metadata": {},
   "source": [
    "**Education Level - Simple Main Effect**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "b1331efb-2ed4-4df1-be66-0409fc2be68f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Effect of Education Level within Gender 1\n",
      "                         sum_sq    df           F        PR(>F)\n",
      "C(education_level)  3809.896627   2.0  266.285643  1.397961e-17\n",
      "Residual             178.844444  25.0         NaN           NaN\n",
      "\n",
      "Effect of Education Level within Gender 2\n",
      "                    sum_sq    df          F        PR(>F)\n",
      "C(education_level)  1810.4   2.0  42.968354  4.075084e-09\n",
      "Residual             568.8  27.0        NaN           NaN\n"
     ]
    }
   ],
   "source": [
    "for gender_level in data['gender'].unique():\n",
    "    sub_data = data[data['gender'] == gender_level]\n",
    "    model = ols('political_interest ~ C(education_level)', data=sub_data).fit()\n",
    "    anova_table = sm.stats.anova_lm(model, typ=2)\n",
    "    print(f\"\\nEffect of Education Level within Gender {gender_level}\")\n",
    "    print(anova_table)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe22fed7-4ff6-4b04-9cf3-b4454306740c",
   "metadata": {},
   "source": [
    "> **Remarks:** A simple main effects analysis was conducted to examine the effect of education level within each gender. **The effect of education level was statistically significant for both males and females.**       \n",
    "&emsp; In **Gender 1 (Males)**. The p-value of **1.397961e-17** is extremely small, far below the significance level (0.05). This indicates that the effect of education level on males is highly statistically significant.\n",
    "&emsp; In **Gender 2 (Females)**. The p-value of **4.075084e-09** is also very small, indicating that the effect of education level on females is statistically significant as well."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fba7fa5a-3098-4257-8f11-8456b7f6f785",
   "metadata": {},
   "source": [
    "<h4>Post Hoc Comparisons – Gender*Educational Level</h4>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "8ada8fcd-6696-461f-915a-be2ca76d6c00",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Multiple Comparison of Means - Tukey HSD, FWER=0.05 \n",
      "====================================================\n",
      "group1 group2 meandiff p-adj   lower   upper  reject\n",
      "----------------------------------------------------\n",
      "   1_1    1_2      5.5 0.0371  0.2116 10.7884   True\n",
      "   1_1    1_3  26.6556    0.0  21.501 31.8101   True\n",
      "   1_1    2_1   2.1556 0.8165  -2.999  7.3101  False\n",
      "   1_1    2_2   7.1556 0.0019   2.001 12.3101   True\n",
      "   1_1    2_3  20.5556    0.0  15.401 25.7101   True\n",
      "   1_2    1_3  21.1556    0.0  16.001 26.3101   True\n",
      "   1_2    2_1  -3.3444 0.4021  -8.499  1.8101  False\n",
      "   1_2    2_2   1.6556 0.9312  -3.499  6.8101  False\n",
      "   1_2    2_3  15.0556    0.0   9.901 20.2101   True\n",
      "   1_3    2_1    -24.5    0.0 -29.517 -19.483   True\n",
      "   1_3    2_2    -19.5    0.0 -24.517 -14.483   True\n",
      "   1_3    2_3     -6.1 0.0089 -11.117  -1.083   True\n",
      "   2_1    2_2      5.0 0.0513  -0.017  10.017  False\n",
      "   2_1    2_3     18.4    0.0  13.383  23.417   True\n",
      "   2_2    2_3     13.4    0.0   8.383  18.417   True\n",
      "----------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "from statsmodels.stats.multicomp import pairwise_tukeyhsd\n",
    "\n",
    "interaction_term = data['gender'].astype(str) + \"_\" + data['education_level'].astype(str)\n",
    "\n",
    "tukey = pairwise_tukeyhsd(data['political_interest'], interaction_term)\n",
    "print(tukey)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "3fa3bfa2-e1c8-4c50-8ada-bb4d7cc13840",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>education_level</th>\n",
       "      <th>Mean_Interest</th>\n",
       "      <th>Std_Dev</th>\n",
       "      <th>Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>37.444444</td>\n",
       "      <td>2.505549</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>42.944444</td>\n",
       "      <td>2.337793</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>64.100000</td>\n",
       "      <td>3.071373</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>39.600000</td>\n",
       "      <td>3.272783</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>44.600000</td>\n",
       "      <td>3.272783</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>6.463573</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gender  education_level  Mean_Interest   Std_Dev  Count\n",
       "0       1                1      37.444444  2.505549      9\n",
       "1       1                2      42.944444  2.337793      9\n",
       "2       1                3      64.100000  3.071373     10\n",
       "3       2                1      39.600000  3.272783     10\n",
       "4       2                2      44.600000  3.272783     10\n",
       "5       2                3      58.000000  6.463573     10"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "desc = data.groupby(['gender', 'education_level']).agg(\n",
    "    Mean_Interest=('political_interest', 'mean'),\n",
    "    Std_Dev=('political_interest', 'std'),\n",
    "    Count=('political_interest', 'size')\n",
    ").reset_index()\n",
    "desc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa886075-1930-4246-a7d6-a25b79133c38",
   "metadata": {},
   "source": [
    ">**Remarks:** All pairwise comparisons were run for each simple main effect.        \n",
    "  \n",
    "&emsp; For **males (1)**, Mean \"Political Interest\" scores for school-educated, college-educated, and university-educated males were **37.44 ± 2.51, 42.94 ± 2.34 and 64.10 ± 3.07,** respectively. University education is linked to significantly higher political interest compared to school or college education, with the most notable difference between school and university education.        \n",
    "&emsp; For **females (2)**, Mean \"Political Interest\" scores for school-educated, college-educated, and university-educated females were **39.60 ± 3.27, 44.60 ± 3.27, and 58.00 ± 6.46**, respectively. In here, education level also significantly influences political interest, with university education showing the highest political interest, followed by college, and then school education.   "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af4cbe41-5a1b-4e06-83b3-5feea92de6d6",
   "metadata": {},
   "source": [
    "## Report "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "678f40f7-88df-4f87-b0f9-03d0f593d2d5",
   "metadata": {},
   "source": [
    "&emsp; This study investigates the effect of education level and gender on individuals' interest in politics. Interest levels were measured on a scale from 0 to 100. Gender and education level were treated as independent variables, while interest in politics served as the dependent variable. With two (2) independent variables and one dependent variable, the most appropriate statistical test would be using two-way Analysis of Variance (ANOVA).\n",
    "\n",
    "&emsp; But in order to run a two-way ANOVA, there are six (6) assumptions that need to be considered first: \n",
    "\n",
    "\n",
    "## Assumption Testing\n",
    "\n",
    "### 1. Continuous\n",
    "- The dependent variable political interest is measured on a continuous scale from 0-100.\n",
    "\n",
    "### 2. Two Independent \n",
    "-  The independent variable gender has two (2) categorical independent groups (Male/Female) and the independent variable, education level, has three (3), which consist of School, College & University.\n",
    "\n",
    "### 3. Independence of Observation\n",
    "- The assumption of independence of observations is met because participants were randomly sampled. \n",
    "\n",
    "### 4. Outliers\n",
    "- **Boxplot Analysis**: A boxplot revealed no significant outliers.\n",
    "\n",
    "### 3. Normality\n",
    "- **Shapiro-Wilk Test**: Normality assumption met for all groups (\\( p > 0.05 \\)).\n",
    "\n",
    "### 4. Homogeneity of Variances\n",
    "- **Levene’s Test**: Equal variances confirmed (\\( p = 0.068 \\)).\n",
    "\n",
    "---\n",
    "\n",
    "## Two-Way ANOVA Results\n",
    "\n",
    "| Source                       | Sum of Squares | df | F       | \\( p \\)-value      |\n",
    "|------------------------------|----------------|----|---------|--------------------|\n",
    "| Gender                      | 10.70          | 1  | 0.744   | \\( p = 0.392 \\)    |\n",
    "| Education Level             | 5409.96        | 2  | 188.14  | \\( p < 0.001 \\)    |\n",
    "| Gender x Education Interaction | 210.34        | 2  | 7.31    | \\( p = 0.0016 \\)   |\n",
    "| Residual                    | 747.64         | 52 |         |                    |\n",
    "\n",
    "**Remarks**:\n",
    "- No main effect of gender (\\( p = 0.392 \\)).\n",
    "- Significant main effect of education (\\( p < 0.001 \\)).\n",
    "- Significant interaction effect (\\( p = 0.0016 \\)).\n",
    "\n",
    "---\n",
    "\n",
    "## Simple Main Effects Analysis\n",
    "\n",
    "### Gender Effects within Education Levels\n",
    "| Education Level | \\( p \\)-value | Remark                                     |\n",
    "|-----------------|---------------|--------------------------------------------|\n",
    "| School          | \\( p = 0.129 \\) | Gender effect not significant.            |\n",
    "| College         | \\( p = 0.226 \\) | Gender effect not significant.            |\n",
    "| University      | \\( p = 0.015 \\) | Gender effect is significant.             |\n",
    "\n",
    "### Education Level Effects within Genders\n",
    "| Gender | \\( p \\)-value | Remark                                     |\n",
    "|--------|---------------|--------------------------------------------|\n",
    "| Male   | \\( p < 0.001 \\) | Significant effect of education level.    |\n",
    "| Female | \\( p < 0.001 \\) | Significant effect of education level.    |\n",
    "\n",
    "---\n",
    "\n",
    "## Post Hoc Analysis (Tukey’s HSD)\n",
    "- Significant differences were observed between:\n",
    "  - School and University (\\( p < 0.001 \\)).\n",
    "  - College and University (\\( p < 0.001 \\)).\n",
    "  - Gender-specific education comparisons showed notable differences at the university level.\n",
    "\n",
    "---\n",
    "\n",
    "## Descriptive Statistics\n",
    "\n",
    "| Gender | Education Level | Mean Political Interest | Std. Dev | Count |\n",
    "|--------|-----------------|--------------------------|----------|-------|\n",
    "| Male   | School          | 37.44                   | 2.51     | 9     |\n",
    "| Male   | College         | 42.94                   | 2.34     | 9     |\n",
    "| Male   | University      | 64.10                   | 3.07     | 10    |\n",
    "| Female | School          | 39.60                   | 3.27     | 10    |\n",
    "| Female | College         | 44.60                   | 3.27     | 10    |\n",
    "| Female | University      | 58.00                   | 6.46     | 10    |\n",
    "\n",
    "---\n",
    "\n",
    "## Conclusion\n",
    "\n",
    "> University education is consistently associated with the highest political interest for both genders.\n",
    "---\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
